/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Veterinaria;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maycol
 */
public class Veterinario extends javax.swing.JFrame {

    int filaSeleccionada, i = 0;
    boolean aux2 = false;

    /**
     * Creates new form Veterinario
     */
    public Veterinario() {
        initComponents();
        textoAlerta1.setVisible(false);
        textoAlerta2.setVisible(false);
        jPanel5.setBackground(new java.awt.Color(153, 255, 255, 80));//Transparencia
        jPanel3.setBackground(new java.awt.Color(153, 255, 255, 80));//Transparencia
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frame = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        frameReg = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        textoCed = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cedulaDueno = new javax.swing.JTextField();
        textoNom = new javax.swing.JLabel();
        nombrePerro = new javax.swing.JTextField();
        textoColor = new javax.swing.JLabel();
        diagnostico = new javax.swing.JTextField();
        textoRaza = new javax.swing.JLabel();
        prescripcion = new javax.swing.JTextField();
        textoNac = new javax.swing.JLabel();
        fechaNac = new com.toedter.calendar.JDateChooser();
        confirmar = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        jFrame1 = new javax.swing.JFrame();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        textoAlerta1 = new javax.swing.JLabel();
        historial = new javax.swing.JToggleButton();
        historialpaciente = new javax.swing.JTextField();
        textoAlerta2 = new javax.swing.JLabel();
        fecha = new com.toedter.calendar.JDateChooser();
        DiaCita = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        textoAlerta3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        frame.setMinimumSize(new java.awt.Dimension(700, 370));
        frame.setResizable(false);
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                frameWindowClosing(evt);
            }
        });

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cédula", "Código", "Nombre Perro", "Fecha", "Tipo", "Hora", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
            tabla.getColumnModel().getColumn(4).setResizable(false);
            tabla.getColumnModel().getColumn(5).setResizable(false);
            tabla.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 700, 300));

        jPanel5.setBackground(new java.awt.Color(153, 255, 255));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras (2).png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 21)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CITAS");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(658, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 70));
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout frameLayout = new javax.swing.GroupLayout(frame.getContentPane());
        frame.getContentPane().setLayout(frameLayout);
        frameLayout.setHorizontalGroup(
            frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        frameLayout.setVerticalGroup(
            frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        frameReg.setMinimumSize(new java.awt.Dimension(280, 360));
        frameReg.setResizable(false);
        frameReg.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                frameRegComponentRemoved(evt);
            }
        });

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textoCed.setText("Cédula:");
        jPanel2.add(textoCed, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jPanel3.setBackground(new java.awt.Color(153, 255, 255));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras (2).png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 21)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Cita");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 40));

        cedulaDueno.setEnabled(false);
        cedulaDueno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cedulaDuenoMouseClicked(evt);
            }
        });
        cedulaDueno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaDuenoActionPerformed(evt);
            }
        });
        jPanel2.add(cedulaDueno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 260, -1));

        textoNom.setText(" Nombre perro:");
        jPanel2.add(textoNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        nombrePerro.setEnabled(false);
        nombrePerro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nombrePerroMouseClicked(evt);
            }
        });
        jPanel2.add(nombrePerro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 260, -1));

        textoColor.setText("Diagnóstico: ");
        jPanel2.add(textoColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        diagnostico.setText("Diagnóstico");
        diagnostico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diagnosticoMouseClicked(evt);
            }
        });
        jPanel2.add(diagnostico, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 260, -1));

        textoRaza.setText("Prescripción:");
        jPanel2.add(textoRaza, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        prescripcion.setText("Prescripción");
        prescripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prescripcionMouseClicked(evt);
            }
        });
        prescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescripcionActionPerformed(evt);
            }
        });
        jPanel2.add(prescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 260, -1));

        textoNac.setText("Fecha de la cita:");
        jPanel2.add(textoNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        fechaNac.setEnabled(false);
        jPanel2.add(fechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 260, -1));

        confirmar.setText("Confirmar");
        confirmar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmarMouseClicked(evt);
            }
        });
        jPanel2.add(confirmar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, -1, -1));

        label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/4 (2).png"))); // NOI18N
        jPanel2.add(label, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 330));

        javax.swing.GroupLayout frameRegLayout = new javax.swing.GroupLayout(frameReg.getContentPane());
        frameReg.getContentPane().setLayout(frameRegLayout);
        frameRegLayout.setHorizontalGroup(
            frameRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameRegLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        frameRegLayout.setVerticalGroup(
            frameRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameRegLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Fecha", "Hora", "Tipo Cita"
            }
        ));
        jScrollPane2.setViewportView(Tabla);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textoAlerta1.setForeground(new java.awt.Color(255, 255, 255));
        textoAlerta1.setText("jLabel1");
        jPanel1.add(textoAlerta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        historial.setText("Historial Clínico");
        historial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historialMouseClicked(evt);
            }
        });
        jPanel1.add(historial, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, -1, 30));

        historialpaciente.setText("Digite el documento");
        historialpaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historialpacienteMouseClicked(evt);
            }
        });
        jPanel1.add(historialpaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 260, 30));

        textoAlerta2.setForeground(new java.awt.Color(255, 255, 255));
        textoAlerta2.setText("Fecha inválida");
        jPanel1.add(textoAlerta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        fecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fechaMouseClicked(evt);
            }
        });
        jPanel1.add(fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 260, 30));

        DiaCita.setText("Agenda");
        DiaCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DiaCitaMouseClicked(evt);
            }
        });
        jPanel1.add(DiaCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, 90, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras (2).png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 32, 32));

        textoAlerta3.setForeground(new java.awt.Color(255, 255, 255));
        textoAlerta3.setText("No se olvide de colocar la fecha ");
        jPanel1.add(textoAlerta3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/3.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void historialpacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historialpacienteMouseClicked
        historialpaciente.setText("");
        fecha.setDate(null);
        textoAlerta2.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_historialpacienteMouseClicked

    private void historialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historialMouseClicked
        boolean validator = false;
        int cedulaCliente = 0;
        try {
            cedulaCliente = Integer.valueOf(historialpaciente.getText());
        } catch (java.lang.NumberFormatException x) {
            validator = true;
            textoAlerta1.setText("Sin letras y entre 1-10 dígitos");
            textoAlerta1.setVisible(true);
        }
        if ("".equals(historialpaciente.getText())) {
            textoAlerta1.setText("La cédula no puede estar vacía");
        }
        if ((validator != true) && (cedulaCliente != 0) && (!"".equals(historialpaciente.getText()))) {
            try {
                String direccionClientes = "C:\\user";
                File f = new File(direccionClientes);
                String ruta = "C:\\user"; //Carpeta ruta
                String nombreArchivo = "ArchivoCitas.txt"; //Nombre archivo
                File archivoClientes = new File(ruta, nombreArchivo);
                if (!archivoClientes.exists()) { //No existe el archivo
                    JOptionPane.showMessageDialog(null, "No hay ningún dato en el archivo. \nNo hay ningún cliente aún.");
                } else {
                    DefaultTableModel model = (DefaultTableModel) tabla.getModel();
                    tabla(model);
                }
            } catch (java.lang.NullPointerException x) {
                textoAlerta2.setVisible(true);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_historialMouseClicked

    private void tabla(DefaultTableModel model) {
        //int cedulaCliente = Integer.valueOf(historialpaciente.getText());
        int dia, mes, año;
        String direccionClientes = "C:\\user";
        File f = new File(direccionClientes);
        String ruta = "C:\\user"; //Carpeta ruta
        String nombreArchivo = "ArchivoCitas.txt"; //Nombre archivo
        File archivoCitas = new File(ruta, nombreArchivo);
        if (!archivoCitas.exists()) { //No existe el archivo
            JOptionPane.showMessageDialog(null, "No hay ningún dato en el archivo. \nNo hay ningún cliente aún.");
        } else {
            try (Scanner sc = new Scanner(archivoCitas)) {
                model.setRowCount(0);
                while (sc.hasNextLine()) {
                    String linea = sc.nextLine();
                    String data[] = linea.split(",");
                    int cod = Integer.valueOf(data[0]);
                    String fech = data[1];
                    String hr = data[2];
                    String tipo = data[3];
                    String nameP = data[4];
                    int ced = Integer.valueOf(data[5]);
                    boolean aux = false;
                    aux2 = true;
                    aux = buscar(aux, cod);
                    String estado;
                    if (aux == true) {
                        estado = "Realizado";
                    } else {
                        estado = "No Realizado";
                    }
                    if (!"Guardería solo por día".equals(tipo) && !"Baño".equals(tipo)) {
                        if (ced == Integer.valueOf(String.valueOf(historialpaciente.getText()))) {
                            model.addRow(new Object[]{ced, cod, nameP, fech, tipo, hr, estado});
                        }
                        if ("Consulta Veterinario".equals(tipo) || "Radiología".equals(tipo)) {
                            sc.nextLine();
                        }
                    }
                    /*if ("Realizado".equals(estado)) {
                        Color c = new Color();
                        System.out.println("entra");
                        for (int j = 0; j < tabla.getColumnCount(); j++) {
                            tabla.getColumnModel().getColumn(j).setCellRenderer(c);
                        }
                    }//aca es*/
                    i++;
                }
            } catch (FileNotFoundException e) {
                System.out.println("El archivo no se encontró");
            }
        }
        frame.setVisible(true);
    }    private void paneles(int code) {
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        String direccionClientes = "C:\\user";
        File f = new File(direccionClientes);
        String ruta = "C:\\user"; //Carpeta ruta
        String nombreArchivo = "HistoriaClínica.txt"; //Nombre archivo
        File archivoCitas = new File(ruta, nombreArchivo);
        if (!archivoCitas.exists()) { //No existe el archivo
            JOptionPane.showMessageDialog(null, "No hay ningún dato en el archivo. \nNo hay ningún cliente aún.");
        } else {
            try (Scanner sc = new Scanner(archivoCitas)) {
                while (sc.hasNextLine()) {
                    String linea = sc.nextLine();
                    String data[] = linea.split(",");
                    int cod = Integer.valueOf(data[1]);
                    if (cod == code) {
                        diagnostico.setText(data[4]);
                        prescripcion.setText(data[5]);
                    }
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Veterinario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    boolean buscar(boolean aux1, int codigo) {
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        String direccionClientes = "C:\\user";
        File f = new File(direccionClientes);
        String ruta = "C:\\user"; //Carpeta ruta
        String nombreArchivo = "HistoriaClínica.txt"; //Nombre archivo
        File archivoCitas = new File(ruta, nombreArchivo);
        if (!archivoCitas.exists()) { //No existe el archivo
            f.mkdir();
            try {
                archivoCitas.createNewFile();
            } catch (IOException ex) {
                System.out.println("Error");
            }
        } else {
            try (Scanner sc = new Scanner(archivoCitas)) {
                while (sc.hasNextLine()) {
                    String linea = sc.nextLine();
                    String data[] = linea.split(",");
                    int cod = Integer.valueOf(data[1]);
                    if (aux2 == true) {
                        if (cod == codigo) {
                            return true;
                        }
                    } else {
                        if (cod == Integer.valueOf(String.valueOf(model.getValueAt(filaSeleccionada, 1)))) {
                            return true;
                        }
                    }
                }
                return false;
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Veterinario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return false;
    }
    private void frameRegComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_frameRegComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_frameRegComponentRemoved

    private void DiaCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DiaCitaMouseClicked
        boolean v5 = true;
        String Fecha = "";
        int diaactual = 1;
        textoAlerta3.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) Tabla.getModel();

        boolean v1 = true;
        try {
            diaactual = (fecha.getCalendar().get(Calendar.DAY_OF_WEEK) - 1);
            String dia = Integer.toString(fecha.getCalendar().get(Calendar.DAY_OF_MONTH));
            String mes = Integer.toString(fecha.getCalendar().get(Calendar.MONTH) + 1);
            String year = Integer.toString(fecha.getCalendar().get(Calendar.YEAR));
            Fecha = dia + "/" + mes + "/" + year;

        } catch (java.lang.NullPointerException x) {
            textoAlerta3.setVisible(!false);
            v1 = false;
        }
        if (diaactual == 6 || diaactual == 7) {
            v5 = false;
            JOptionPane.showMessageDialog(null, "En este dia de la semana no hay citas");
        }
        System.out.println(v1 + " " + v5);
        if (v1 && v5) {

            String direccionAgendaVet = "C:\\user";
            File f = new File(direccionAgendaVet);
            String ruta = "C:\\user"; //Carpeta ruta
            String nombreArchivo = "AgendaVet.txt"; //Nombre archivo
            File ArchivoVet = new File(ruta, nombreArchivo);
            if (!ArchivoVet.exists()) {
                JOptionPane.showMessageDialog(null, "No hay agenda aun");
            } else {
                jFrame1.setSize(640, 480);
                jFrame1.setVisible(v1);
                try ( Scanner sc = new Scanner(ArchivoVet)) {
                    model.setRowCount(0);
                    while (sc.hasNextLine()) {

                        String linea = sc.nextLine();
                        String data[] = linea.split(",");
                        String FechaA = data[0];
                        String HoraA = data[1];
                        String TipoCita = data[2];
                        if (FechaA.equals(Fecha)) {
                            model.addRow(new Object[]{FechaA, HoraA, TipoCita});
                        }
                    }
                } catch (FileNotFoundException e) {
                    System.out.println("El archivo no se encontró");
                }
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DiaCitaMouseClicked

    private void cedulaDuenoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cedulaDuenoMouseClicked
        cedulaDueno.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaDuenoMouseClicked

    private void cedulaDuenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaDuenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaDuenoActionPerformed

    private void nombrePerroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nombrePerroMouseClicked
        nombrePerro.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_nombrePerroMouseClicked

    private void diagnosticoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diagnosticoMouseClicked
        diagnostico.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_diagnosticoMouseClicked

    private void prescripcionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prescripcionMouseClicked
        prescripcion.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_prescripcionMouseClicked

    private void prescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prescripcionActionPerformed

    private void confirmarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmarMouseClicked
        //confirmar que no se pongan comas
        if (prescripcion.isEnabled()) {
            DefaultTableModel model = (DefaultTableModel) tabla.getModel();
            if (!"Diagnóstico".equals(diagnostico.getText()) && !"Prescripción".equals(prescripcion.getText())) {
                if (!"".equals(diagnostico.getText()) && !"".equals(prescripcion.getText())) {
                    save(model);
                    frameReg.setVisible(false);
                    diagnostico.setText("Diagnóstico");
                    prescripcion.setText("Prescripción");
                } else {
                    JOptionPane.showMessageDialog(null, "No puede dejar algún campo vacío");
                }
            } else {
                if (!"Diagnóstico".equals(diagnostico.getText()) && "Prescripción".equals(prescripcion.getText())) {
                    JOptionPane.showMessageDialog(null, "Ingrese una prescripción");
                } else if ("Diagnóstico".equals(diagnostico.getText()) && !"Prescripción".equals(prescripcion.getText())) {
                    JOptionPane.showMessageDialog(null, "Ingrese un diagnóstico");
                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese una prescripción y un diagnóstico");
                }

            }
        } else {
            frameReg.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmarMouseClicked

    private void fechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechaMouseClicked
        textoAlerta2.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaMouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        this.setVisible(false);
        Usuario user = new Usuario();
        user.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
frame.setVisible(true);
frameReg.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7MouseClicked

    private void frameWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frameWindowClosing
        historialpaciente.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_frameWindowClosing

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        frame.setVisible(false);
        this.setVisible(true);
        historialpaciente.setText("Digite el documento");
        fecha.setDate(null);
        textoAlerta1.setVisible(false);
        textoAlerta2.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseClicked

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        filaSeleccionada = tabla.getSelectedRow();
        int codigo = Integer.valueOf(String.valueOf(model.getValueAt(filaSeleccionada, 0)));
        boolean aux = false;
        aux2 = false;
        aux = buscar(aux, codigo);
        if (aux == false) {
            diagnostico.setText("Diagnóstico");
            prescripcion.setText("Prescripción");
            frameReg.setVisible(true);
            String aux123 = String.valueOf(model.getValueAt(filaSeleccionada, 3));
            try {
                Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(aux123);
                fechaNac.setDate(date1);
            } catch (ParseException ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }
            cedulaDueno.setText(String.valueOf(model.getValueAt(filaSeleccionada, 0)));
            nombrePerro.setText(String.valueOf(model.getValueAt(filaSeleccionada, 2)));
            diagnostico.setEnabled(true);
            prescripcion.setEnabled(true);
            frame.setVisible(false);
        } else {
            frameReg.setVisible(true);
            String aux123 = String.valueOf(model.getValueAt(filaSeleccionada, 3));
            try {
                Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(aux123);
                fechaNac.setDate(date1);
                cedulaDueno.setText(String.valueOf(model.getValueAt(filaSeleccionada, 0)));
                nombrePerro.setText(String.valueOf(model.getValueAt(filaSeleccionada, 2)));
                diagnostico.setEnabled(false);
                prescripcion.setEnabled(false);
                int code = Integer.valueOf(String.valueOf(model.getValueAt(filaSeleccionada, 1)));
                paneles(code);
            } catch (ParseException ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }
            frame.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaMouseClicked
    private void save(DefaultTableModel model) {
        String sDir = "C:\\user";
        File f = new File(sDir);
        String ruta = "C:\\user"; //Carpeta ruta
        String nombreArchivo = "HistoriaClínica.txt"; //Nombre archivo
        File archivoClientes = new File(ruta, nombreArchivo);
        if (!archivoClientes.exists()) { //No existe el archivo
            f.mkdir();
            try {
                archivoClientes.createNewFile();
            } catch (IOException ex) {
                System.out.println("Error");
            }
        }
        try (FileWriter fw = new FileWriter(archivoClientes.getAbsoluteFile(), true)) {
            BufferedWriter bw = new BufferedWriter(fw);
            //casting
            int cod = Integer.valueOf(String.valueOf(model.getValueAt(filaSeleccionada, 1)));
            String fech = String.valueOf(model.getValueAt(filaSeleccionada, 3));
            int ced = Integer.valueOf(String.valueOf(model.getValueAt(filaSeleccionada, 0)));
            String nombre = String.valueOf(model.getValueAt(filaSeleccionada, 2));
            String diag = diagnostico.getText();
            String pres = prescripcion.getText();
            bw.write(ced + "," + cod + "," + fech + "," + nombre + "," + diag + "," + pres);
            bw.newLine();
            bw.flush();
            bw.close();
            fw.close();
        } catch (IOException e) {
            System.out.println("Error al crear archivo");
        }
        /*String sDire = "C:\\user";
        File fi = new File(sDir);
        String rut = "C:\\user"; //Carpeta ruta
        String nombreArchivoAux = "CitasDiagnosticadas.txt"; //Nombre archivo
        File archivoAux = new File(ruta, nombreArchivoAux);
        if (!archivoAux.exists()) { //No existe el archivo
            f.mkdir();
            try {
                archivoAux.createNewFile();
            } catch (IOException ex) {
                System.out.println("Error");
            }
        }
        try (FileWriter fw = new FileWriter(archivoAux.getAbsoluteFile(), true)) {
            BufferedWriter bw = new BufferedWriter(fw);
            //casting
            int cod = Integer.valueOf(String.valueOf(model.getValueAt(filaSeleccionada, 0)));
            String aux = "true";
            bw.write(cod+","+aux);
            bw.newLine();
            bw.flush();
            bw.close();
            fw.close();
        } catch (IOException e) {
            System.out.println("Error al crear archivo");
        }*/
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Veterinario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Veterinario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Veterinario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Veterinario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Veterinario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DiaCita;
    private javax.swing.JTable Tabla;
    private javax.swing.JTextField cedulaDueno;
    private javax.swing.JButton confirmar;
    private javax.swing.JTextField diagnostico;
    private com.toedter.calendar.JDateChooser fecha;
    private com.toedter.calendar.JDateChooser fechaNac;
    private javax.swing.JFrame frame;
    private javax.swing.JFrame frameReg;
    private javax.swing.JToggleButton historial;
    private javax.swing.JTextField historialpaciente;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label;
    private javax.swing.JTextField nombrePerro;
    private javax.swing.JTextField prescripcion;
    private javax.swing.JTable tabla;
    private javax.swing.JLabel textoAlerta1;
    private javax.swing.JLabel textoAlerta2;
    private javax.swing.JLabel textoAlerta3;
    private javax.swing.JLabel textoCed;
    private javax.swing.JLabel textoColor;
    private javax.swing.JLabel textoNac;
    private javax.swing.JLabel textoNom;
    private javax.swing.JLabel textoRaza;
    // End of variables declaration//GEN-END:variables
}
