/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Veterinaria;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maycol
 */
public class Administrador extends javax.swing.JFrame {

    /**
     * Creates new form Administrador
     */
    float suma = 0;

    public Administrador() {
        initComponents();
        jPanel2.setBackground(new Color(153, 255, 255, 80));//Transparencia
        jPanel3.setBackground(new Color(153, 255, 255, 80));//Transparencia
        jPanel5.setBackground(new Color(153, 255, 255, 80));//Transparencia
        tabla.setBackground(new Color(255, 255, 255, 90));//Transparencia
        textoAlerta1.setVisible(false);
        textoAlerta2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablaF = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jFrame1 = new javax.swing.JFrame();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jFrame2 = new javax.swing.JFrame();
        jPanel7 = new javax.swing.JPanel();
        textoAlerta3 = new javax.swing.JLabel();
        agendaVet = new javax.swing.JButton();
        DiaBuscar = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        factura = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        total = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        cedula = new javax.swing.JTextField();
        fecha = new com.toedter.calendar.JDateChooser();
        textoAlerta1 = new javax.swing.JLabel();
        textoAlerta2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        tablaF.setMinimumSize(new java.awt.Dimension(460, 307));

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código cita", "Cédula", "Fecha", "Motivo", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
            tabla.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 47, 460, 260));

        jPanel5.setBackground(new java.awt.Color(153, 255, 255));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras (2).png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 21)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("FACTURACIÓN TOTAL");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(418, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 50));
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout tablaFLayout = new javax.swing.GroupLayout(tablaF.getContentPane());
        tablaF.getContentPane().setLayout(tablaFLayout);
        tablaFLayout.setHorizontalGroup(
            tablaFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablaFLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        tablaFLayout.setVerticalGroup(
            tablaFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablaFLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Fecha", "Hora", "Tipo Cita", "Nombre Mascota", "Cedula Dueño"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tabla);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        textoAlerta3.setForeground(new java.awt.Color(255, 51, 51));
        textoAlerta3.setText("No se olvide de colocar la fecha ");

        agendaVet.setText("Ver Citas");
        agendaVet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agendaVetMouseClicked(evt);
            }
        });
        agendaVet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agendaVetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoAlerta3)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(DiaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(agendaVet, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(textoAlerta3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DiaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agendaVet, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 103, Short.MAX_VALUE))
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(309, 350));
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(153, 255, 255));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras (2).png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 21)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CITAS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(268, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 50));

        jPanel3.setBackground(new java.awt.Color(153, 255, 255));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 21)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Facturación");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 310, 50));

        factura.setText("Factura Cliente");
        factura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                facturaMouseClicked(evt);
            }
        });
        jPanel1.add(factura, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 130, 30));

        jButton1.setText("Modificar");
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 80, 30));

        total.setText("Total en caja");
        total.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totalMouseClicked(evt);
            }
        });
        jPanel1.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 130, 30));

        jButton3.setText("Eliminar");
        jButton3.setMaximumSize(new java.awt.Dimension(75, 23));
        jButton3.setMinimumSize(new java.awt.Dimension(75, 23));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, 30));

        jButton4.setText("Asignar");
        jButton4.setMaximumSize(new java.awt.Dimension(75, 23));
        jButton4.setMinimumSize(new java.awt.Dimension(75, 23));
        jButton4.setPreferredSize(new java.awt.Dimension(75, 23));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 80, 30));

        jButton5.setText("Consultar");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 80, 30));

        cedula.setText("Cédula...");
        cedula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cedulaMouseClicked(evt);
            }
        });
        cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaActionPerformed(evt);
            }
        });
        jPanel1.add(cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 130, 30));
        jPanel1.add(fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 130, 30));

        textoAlerta1.setText("Fecha inválida!");
        jPanel1.add(textoAlerta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        textoAlerta2.setText("Deben ser números!");
        jPanel1.add(textoAlerta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 350));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaActionPerformed

    private void totalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalMouseClicked

        try {
            String dia = Integer.toString(fecha.getCalendar().get(Calendar.DAY_OF_MONTH));
            String mes = Integer.toString(fecha.getCalendar().get(Calendar.MONTH) + 1);
            String year = Integer.toString(fecha.getCalendar().get(Calendar.YEAR));
            DefaultTableModel model = (DefaultTableModel) tabla.getModel();
            tabla(model, dia, mes, year);
            if (tabla.getValueAt(0, 0) == null) {
                JOptionPane.showMessageDialog(null, "De momento, no hay ninguna factura pagada hasta esa fecha");
            } else {
                jLabel5.setText("FACTURACIÓN TOTAL");
                tablaF.setVisible(true);
                model.addRow(new Object[]{null, null, null, null, suma});
            }

        } catch (java.lang.NullPointerException x) {
            textoAlerta1.setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_totalMouseClicked

    private void facturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_facturaMouseClicked
        boolean validator = false;
        int cedulaCliente = 0;
        try {
            cedulaCliente = Integer.valueOf(cedula.getText());
        } catch (java.lang.NumberFormatException x) {
            validator = true;
            textoAlerta2.setText("Sin letras y 1-10 dígitos");
            textoAlerta2.setVisible(true);
        }
        if ("".equals(cedula.getText())) {
            textoAlerta2.setText("La cédula no puede estar vacía");
        }
        if ((validator != true) && (cedulaCliente != 0) && (!"".equals(cedula.getText()))) {
            DefaultTableModel model = (DefaultTableModel) tabla.getModel();
            tablaCed(model);
            if (tabla.getValueAt(0, 0) == null) {

            } else {
                jLabel5.setText("FACTURACIÓN POR CLIENTE");
                tablaF.setVisible(true);
                model.addRow(new Object[]{null, null, null, null, suma});
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_facturaMouseClicked

    private void cedulaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cedulaMouseClicked
        cedula.setText("");
        fecha.setDate(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaMouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.setVisible(false);
        Usuario user = new Usuario();
        user.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        tablaF.setVisible(false);
        fecha.setDate(null);
        cedula.setText("");
        textoAlerta1.setVisible(false);
        textoAlerta2.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7MouseClicked

    private void agendaVetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agendaVetMouseClicked
        boolean v5 = true;
        String Fecha = "";
        int diaactual = 1;
        textoAlerta3.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) Tabla.getModel();

        boolean v1 = true;
        try {
            diaactual = (DiaBuscar.getCalendar().get(Calendar.DAY_OF_WEEK) - 1);
            String dia = Integer.toString(DiaBuscar.getCalendar().get(Calendar.DAY_OF_MONTH));
            String mes = Integer.toString(DiaBuscar.getCalendar().get(Calendar.MONTH) + 1);
            String year = Integer.toString(DiaBuscar.getCalendar().get(Calendar.YEAR));
            Fecha = dia + "/" + mes + "/" + year;

        } catch (java.lang.NullPointerException x) {
            textoAlerta3.setVisible(!false);
            v1 = false;
        }
        if (diaactual == 6 || diaactual == 7) {
            v5 = false;
            JOptionPane.showMessageDialog(null, "En este dia de la semana no hay citas");
        }
        System.out.println(v1 + " " + v5);
        if (v1 && v5) {

            String direccionArchivoCitas = "C:\\user";
            File f = new File(direccionArchivoCitas);
            String ruta = "C:\\user"; //Carpeta ruta
            String nombreArchivo = "ArchivoCitas.txt"; //Nombre archivo
            File ArchivoCitas = new File(ruta, nombreArchivo);
            if (!ArchivoCitas.exists()) {
                JOptionPane.showMessageDialog(null, "No hay agenda aun");
            } else {
                jFrame1.setSize(640, 480);
                jFrame1.setVisible(v1);
                try ( Scanner sc = new Scanner(ArchivoCitas)) {
                    model.setRowCount(0);
                    while (sc.hasNextLine()) {

                        String linea = sc.nextLine();
                        String data[] = linea.split(",");
                        String Codigo = data[0];
                        String FechaA = data[1];
                        String HoraA = data[2];
                        String TipoCita = data[3];
                        String NombreMas = data[4];
                        String Cedu = data[5];
                        if (FechaA.equals(Fecha)) {
                            model.addRow(new Object[]{Codigo,FechaA, HoraA, TipoCita,NombreMas,Cedu});
                        }
                    }
                } catch (FileNotFoundException e) {
                    System.out.println("El archivo no se encontró");
                }
            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_agendaVetMouseClicked

    private void agendaVetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agendaVetActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_agendaVetActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
Agendar Agendy = new Agendar();
        Agendy.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
jFrame2.setSize(640, 480);
                jFrame2.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
Eliminar canceli = new Eliminar();
        canceli.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseClicked
    private void tablaCed(DefaultTableModel model) {
        String direccionClientes = "C:\\user";
        suma = 0;
        File f = new File(direccionClientes);
        String ruta = "C:\\user"; //Carpeta ruta
        String nombreArchivo = "ArchivoCitas.txt"; //Nombre archivo
        File archivoCitas = new File(ruta, nombreArchivo);
        if (!archivoCitas.exists()) { //No existe el archivo
            JOptionPane.showMessageDialog(null, "No hay ningún dato en el archivo. \nNo hay ningún cliente aún.");
        } else {
            try (Scanner sc = new Scanner(archivoCitas)) {
                model.setRowCount(0);
                while (sc.hasNextLine()) {
                    String linea = sc.nextLine();
                    String data[] = linea.split(",");
                    int cod = Integer.valueOf(data[0]);
                    int ced = Integer.valueOf(data[5]);
                    String fech = data[1];
                    String tipo = data[3];
                    float precio = 0;
                    switch (tipo) {
                        case "Consulta Veterinario":
                            precio = 60000;
                            break;
                        case "Control":
                            precio = 10000;
                            break;
                        case "Desparasitación":
                            precio = 40000;
                            break;
                        case "Vacunación":
                            precio = 35000;
                            break;
                        case "Guardería solo por día":
                            precio = 35000;
                            break;
                        case "Radiología":
                            precio = 100000;
                            break;
                        case "Baño":
                            precio = 25000;
                            break;
                    }
                    if ("Consulta Veterinario".equals(tipo) || "Radiología".equals(tipo)) {
                        sc.nextLine();
                    }
                    boolean aux = false;
                    if (ced == Integer.valueOf(cedula.getText())) {
                        aux = buscar(aux, cod);
                        if (aux == true) {
                            suma = suma + precio;
                            model.addRow(new Object[]{cod, ced, fech, tipo, precio});
                        }
                        if (("Guardería solo por día".equals(tipo) || "Baño".equals(tipo))) {
                            suma = suma + precio;
                            model.addRow(new Object[]{cod, ced, fech, tipo, precio});
                        }
                    }
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void tabla(DefaultTableModel model, String dia, String mes, String year) {
        String direccionClientes = "C:\\user";
        suma = 0;
        File f = new File(direccionClientes);
        String ruta = "C:\\user"; //Carpeta ruta
        String nombreArchivo = "ArchivoCitas.txt"; //Nombre archivo
        File archivoCitas = new File(ruta, nombreArchivo);
        if (!archivoCitas.exists()) { //No existe el archivo
            JOptionPane.showMessageDialog(null, "No hay ningún dato en el archivo. \nNo hay ningún cliente aún.");
        } else {
            try (Scanner sc = new Scanner(archivoCitas)) {
                model.setRowCount(0);
                while (sc.hasNextLine()) {
                    String linea = sc.nextLine();
                    String data[] = linea.split(",");
                    int cod = Integer.valueOf(data[0]);
                    int ced = Integer.valueOf(data[5]);
                    String fech = data[1];
                    String tipo = data[3];
                    float precio = 0;
                    switch (tipo) {
                        case "Consulta Veterinario":
                            precio = 60000;
                            break;
                        case "Control":
                            precio = 10000;
                            break;
                        case "Desparasitación":
                            precio = 40000;
                            break;
                        case "Vacunación":
                            precio = 35000;
                            break;
                        case "Guardería solo por día":
                            precio = 35000;
                            break;
                        case "Radiología":
                            precio = 100000;
                            break;
                        case "Baño":
                            precio = 25000;
                            break;
                    }
                    if ("Consulta Veterinario".equals(tipo) || "Radiología".equals(tipo)) {
                        sc.nextLine();
                    }
                    boolean aux = false, aux2 = false;
                    aux = buscar(aux, cod);
                    aux2 = false;
                    //aux2 = validar(aux2, dia, mes, year);
                    System.out.println(dia);
                    String fecha1 = String.valueOf((Integer.valueOf(dia) + 1) + "/" + mes + "/" + year);
                    System.out.println(dia);
                    try {
                        Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(fecha1);
                        Date date2 = new SimpleDateFormat("dd/MM/yyyy").parse(fech);
                        if (date1.after(date2)) {
                            System.out.println("date1 " + date1);
                            System.out.println("date2 " + date2);
                            aux2 = true;
                        }
                    } catch (ParseException ex) {
                        Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (aux == true && aux2 == true) {
                        suma = suma + precio;
                        model.addRow(new Object[]{cod, ced, fech, tipo, precio});
                    }
                    if (("Guardería solo por día".equals(tipo) || "Baño".equals(tipo)) && (aux2 == true)) {
                        suma = suma + precio;
                        model.addRow(new Object[]{cod, ced, fech, tipo, precio});
                    }
                }
            } catch (FileNotFoundException e) {
                System.out.println("El archivo no se encontró");
            }
        }
    }

    /*
    boolean validar(boolean aux2, String dia, String mes, String year) {
        String direccionClientes = "C:\\user";
        File f = new File(direccionClientes);
        String ruta = "C:\\user"; //Carpeta ruta
        String nombreArchivo = "HistoriaClínica.txt"; //Nombre archivo
        File archivoHist = new File(ruta, nombreArchivo);
        if (!archivoHist.exists()) { //No existe el archivo
            return false;
        } else {
            String fecha1 = String.valueOf(dia + "/" + mes + "/" + year);
            String fecha2 = null;
            try (Scanner sc = new Scanner(archivoHist)) {
                while (sc.hasNextLine()) {
                    String linea = sc.nextLine();
                    String data[] = linea.split(",");
                    fecha2 = data[1];
                }
                try {
                    Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(fecha1);
                    Date date2 = new SimpleDateFormat("dd/MM/yyyy").parse(fecha2);
                    if (date1.after(date2)) {
                        return true;
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return false;
    }
     */
    boolean buscar(boolean aux1, int code) {
        String direccionClientes = "C:\\user";
        File f = new File(direccionClientes);
        String ruta = "C:\\user"; //Carpeta ruta
        String nombreArchivo = "HistoriaClínica.txt"; //Nombre archivo
        File archivoHist = new File(ruta, nombreArchivo);
        if (!archivoHist.exists()) { //No existe el archivo
            return false;
        } else {
            try (Scanner sc = new Scanner(archivoHist)) {
                while (sc.hasNextLine()) {
                    String linea = sc.nextLine();
                    String data[] = linea.split(",");
                    int cod = Integer.valueOf(data[1]);
                    if (cod == code) {
                        System.out.println("1");
                        return true;
                    }
                }
                return false;
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Veterinario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DiaBuscar;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton agendaVet;
    private javax.swing.JTextField cedula;
    private javax.swing.JButton factura;
    private com.toedter.calendar.JDateChooser fecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla;
    private javax.swing.JFrame tablaF;
    private javax.swing.JLabel textoAlerta1;
    private javax.swing.JLabel textoAlerta2;
    private javax.swing.JLabel textoAlerta3;
    private javax.swing.JButton total;
    // End of variables declaration//GEN-END:variables
}
